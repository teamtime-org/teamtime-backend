name: Build and Deploy Docker Image

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  IMAGE_NAME: teamtime-backend

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.meta.outputs.version }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.CI_REGISTRY_USER }}
          password: ${{ secrets.CI_REGISTRY_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_REGISTRY }}/einventiva/einventickets/backend-teamtime
          tags: |
            type=raw,value=1.0.${{ github.run_number }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            NODE_ENV=production

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    container: alpine:latest
    
    steps:
      - name: Setup SSH and Deploy
        run: |
          apk add --no-cache openssh
          eval "$(ssh-agent -s)"
          echo "${{ secrets.DEPLOY_PRIVATE_KEY }}" | tr -d '\r' | ssh-add -
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.DEPLOY_SERVER_IP }} >> ~/.ssh/known_hosts
          
          ssh ${{ secrets.DEPLOY_SERVER }} bash -c "'
            echo ${{ secrets.CI_REGISTRY_PASSWORD }} | docker login ${{ secrets.DOCKER_REGISTRY }} -u ${{ secrets.CI_REGISTRY_USER }} --password-stdin
            docker pull ${{ secrets.DOCKER_REGISTRY }}/einventiva/einventickets/backend-teamtime:1.0.${{ github.run_number }}
            docker stop ${{ env.IMAGE_NAME }} || true
            docker rm ${{ env.IMAGE_NAME }} || true
            docker run -d \
              --name ${{ env.IMAGE_NAME }} \
              --restart unless-stopped \
              -p 5300:3000 \
              -e DATABASE_URL=\"${{ secrets.DATABASE_URL }}\" \
              -e JWT_SECRET=\"${{ secrets.JWT_SECRET }}\" \
              -e JWT_EXPIRE=\"${{ secrets.JWT_EXPIRE }}\" \
              -e NODE_ENV=\"production\" \
              -e PORT=\"3000\" \
              -e FRONTEND_URL=\"${{ secrets.FRONTEND_URL }}\" \
              -e CORS_ORIGIN=\"${{ secrets.CORS_ORIGIN }}\" \
              -e RATE_LIMIT_WINDOW_MS=\"${{ secrets.RATE_LIMIT_WINDOW_MS }}\" \
              -e RATE_LIMIT_MAX_REQUESTS=\"${{ secrets.RATE_LIMIT_MAX_REQUESTS }}\" \
              -e LOG_LEVEL=\"${{ secrets.LOG_LEVEL }}\" \
              -e LOG_FILE=\"logs/app.log\" \
              -e BCRYPT_ROUNDS=\"${{ secrets.BCRYPT_ROUNDS }}\" \
              -e DEFAULT_EMAIL_DOMAIN=\"${{ secrets.DEFAULT_EMAIL_DOMAIN }}\" \
              -e DEFAULT_TEMP_PASSWORD=\"${{ secrets.DEFAULT_TEMP_PASSWORD }}\" \
              -v teamtime-uploads:/app/uploads \
              -v teamtime-logs:/app/logs \
              ${{ secrets.DOCKER_REGISTRY }}/einventiva/einventickets/backend-teamtime:1.0.${{ github.run_number }}
          '"