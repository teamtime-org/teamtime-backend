#!/usr/bin/env node

/**
 * Diagn√≥stico de CORS - Verificar configuraci√≥n y conectividad
 */

const chalk = require('chalk');

console.log(chalk.blue.bold('\nüåê DIAGN√ìSTICO DE CORS\n'));

// Verificar configuraci√≥n
console.log(chalk.yellow('‚öôÔ∏è  CONFIGURACI√ìN ACTUAL:'));
try {
    const config = require('./src/config');
    console.log(`   ‚úÖ CORS_ORIGIN: ${chalk.green(config.CORS_ORIGIN)}`);
    console.log(`   ‚úÖ FRONTEND_URL: ${chalk.green(config.FRONTEND_URL)}`);
    console.log(`   ‚úÖ PORT: ${chalk.green(config.PORT)}`);
    console.log(`   ‚úÖ NODE_ENV: ${chalk.green(config.NODE_ENV)}`);
} catch (error) {
    console.log(`   ‚ùå ${chalk.red('Error cargando configuraci√≥n:', error.message)}`);
}

console.log(chalk.yellow('\nüîç VERIFICACIONES DE CONECTIVIDAD:'));

const { exec } = require('child_process');
const util = require('util');
const execPromise = util.promisify(exec);

async function checkCORS() {
    try {
        // Verificar si el servidor est√° corriendo
        console.log('   üîç Verificando servidor en puerto 3000...');
        const { stdout: healthCheck } = await execPromise('curl -s http://localhost:3000/api/health');
        if (healthCheck.includes('healthy')) {
            console.log('   ‚úÖ Servidor respondiendo correctamente');
        } else {
            console.log('   ‚ö†Ô∏è  Servidor responde pero sin endpoint health');
        }

        // Verificar CORS para localhost:5173
        console.log('   üîç Verificando CORS desde localhost:5173...');
        const { stdout: corsCheck } = await execPromise('curl -H "Origin: http://localhost:5173" -I http://localhost:3000/api/health 2>/dev/null');

        if (corsCheck.includes('Access-Control-Allow-Origin: http://localhost:5173')) {
            console.log('   ‚úÖ CORS configurado correctamente para localhost:5173');
        } else {
            console.log('   ‚ùå CORS NO configurado para localhost:5173');
            console.log('   üìã Respuesta del servidor:');
            console.log('   ', corsCheck.split('\\n').filter(line => line.includes('Access-Control')).join('\\n   '));
        }

        // Verificar m√©todos permitidos
        console.log('   üîç Verificando m√©todos HTTP permitidos...');
        const { stdout: optionsCheck } = await execPromise('curl -H "Origin: http://localhost:5173" -H "Access-Control-Request-Method: POST" -X OPTIONS -I http://localhost:3000/api/projects 2>/dev/null');

        if (optionsCheck.includes('Access-Control-Allow-Methods')) {
            console.log('   ‚úÖ M√©todos HTTP configurados correctamente');
            const methodsLine = optionsCheck.split('\\n').find(line => line.includes('Access-Control-Allow-Methods'));
            if (methodsLine) {
                console.log(`   üìã M√©todos permitidos: ${methodsLine.split(': ')[1]}`);
            }
        } else {
            console.log('   ‚ùå M√©todos HTTP no configurados');
        }

        // Verificar headers permitidos
        if (optionsCheck.includes('Access-Control-Allow-Headers')) {
            console.log('   ‚úÖ Headers permitidos configurados');
            const headersLine = optionsCheck.split('\\n').find(line => line.includes('Access-Control-Allow-Headers'));
            if (headersLine) {
                console.log(`   üìã Headers permitidos: ${headersLine.split(': ')[1]}`);
            }
        } else {
            console.log('   ‚ùå Headers permitidos no configurados');
        }

    } catch (error) {
        console.log(`   ‚ùå Error en verificaci√≥n: ${error.message}`);
    }
}

async function main() {
    await checkCORS();

    console.log(chalk.yellow('\\nüõ†Ô∏è  SOLUCIONES COMUNES:'));

    console.log(chalk.blue('\\n1. Si sigues viendo errores de CORS:'));
    console.log('   ‚Ä¢ Aseg√∫rate de que el servidor est√© corriendo: node src/server.js');
    console.log('   ‚Ä¢ Verifica que el frontend est√© en http://localhost:5173');
    console.log('   ‚Ä¢ Limpia la cach√© del navegador (Cmd+Shift+R en Mac, Ctrl+Shift+R en Windows)');

    console.log(chalk.blue('\\n2. Para probar manualmente:'));
    console.log('   ‚Ä¢ Abre Developer Tools en el navegador');
    console.log('   ‚Ä¢ Ve a Network tab');
    console.log('   ‚Ä¢ Verifica que las respuestas incluyan Access-Control-Allow-Origin');

    console.log(chalk.blue('\\n3. Comandos √∫tiles:'));
    console.log(chalk.cyan('   curl -H "Origin: http://localhost:5173" -I http://localhost:3000/api/health'));
    console.log(chalk.cyan('   curl -H "Origin: http://localhost:5173" -X OPTIONS http://localhost:3000/api/projects'));

    console.log(chalk.green.bold('\\n‚úÖ CONFIGURACI√ìN CORS VERIFICADA'));
    console.log('El servidor deber√≠a estar funcionando correctamente para peticiones desde localhost:5173');
}

main().catch(console.error);
