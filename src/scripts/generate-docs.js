const fs = require('fs');
const path = require('path');
const yaml = require('yamljs');
const { specs } = require('../config/swagger');

/**
 * Script para generar documentaci√≥n OpenAPI/Swagger
 */

async function generateDocs() {
    try {
        console.log('üîß Generando documentaci√≥n OpenAPI...');

        // Crear directorio de documentaci√≥n si no existe
        const docsDir = path.join(__dirname, '../docs');
        if (!fs.existsSync(docsDir)) {
            fs.mkdirSync(docsDir, { recursive: true });
        }

        // Generar archivo JSON
        const jsonPath = path.join(docsDir, 'openapi.json');
        fs.writeFileSync(jsonPath, JSON.stringify(specs, null, 2));
        console.log(`‚úÖ Archivo JSON generado: ${jsonPath}`);

        // Generar archivo YAML
        const yamlPath = path.join(docsDir, 'openapi.yaml');
        const yamlContent = yaml.stringify(specs, 2);
        fs.writeFileSync(yamlPath, yamlContent);
        console.log(`‚úÖ Archivo YAML generado: ${yamlPath}`);

        // Generar README de la documentaci√≥n
        const readmePath = path.join(docsDir, 'API_DOCS.md');
        const readmeContent = generateApiReadme();
        fs.writeFileSync(readmePath, readmeContent);
        console.log(`‚úÖ README de API generado: ${readmePath}`);

        // Estad√≠sticas
        const endpointCount = countEndpoints(specs);
        console.log(`üìä Estad√≠sticas de documentaci√≥n:`);
        console.log(`   - Endpoints documentados: ${endpointCount}`);
        console.log(`   - Esquemas definidos: ${Object.keys(specs.components?.schemas || {}).length}`);
        console.log(`   - Tags utilizados: ${specs.tags?.length || 0}`);

        console.log('üéâ Documentaci√≥n generada exitosamente!');
        console.log(`üìö Swagger UI disponible en: http://localhost:3000/api/docs`);
        console.log(`üìÑ OpenAPI JSON: http://localhost:3000/api/docs.json`);

    } catch (error) {
        console.error('‚ùå Error generando documentaci√≥n:', error);
        process.exit(1);
    }
}

function countEndpoints(specs) {
    let count = 0;
    if (specs.paths) {
        Object.values(specs.paths).forEach(path => {
            count += Object.keys(path).length;
        });
    }
    return count;
}

function generateApiReadme() {
    return `# TeamTime API Documentation

## Descripci√≥n

Esta documentaci√≥n describe la API REST de TeamTime, un sistema de gesti√≥n de tiempo y proyectos empresariales.

## Informaci√≥n de la API

- **Versi√≥n**: ${specs.info?.version || '1.0.0'}
- **T√≠tulo**: ${specs.info?.title || 'TeamTime API'}
- **Descripci√≥n**: ${specs.info?.description || 'API REST para gesti√≥n de tiempo y proyectos'}

## Servidores

${specs.servers?.map(server => `- **${server.description}**: ${server.url}`).join('\n') || '- No hay servidores configurados'}

## Autenticaci√≥n

La API utiliza JWT (JSON Web Tokens) para autenticaci√≥n. Para acceder a endpoints protegidos:

1. Obt√©n un token mediante \`POST /auth/login\`
2. Incluye el token en el header de autorizaci√≥n: \`Authorization: Bearer <token>\`

## M√≥dulos de la API

${specs.tags?.map(tag => `### ${tag.name}\n${tag.description || 'Sin descripci√≥n'}`).join('\n\n') || 'No hay tags definidos'}

## Esquemas de Datos

Los siguientes esquemas est√°n disponibles en la API:

${Object.keys(specs.components?.schemas || {}).map(schema => `- \`${schema}\``).join('\n') || 'No hay esquemas definidos'}

## C√≥digos de Respuesta Comunes

- **200**: Operaci√≥n exitosa
- **201**: Recurso creado exitosamente
- **400**: Error de validaci√≥n en la petici√≥n
- **401**: Token de autenticaci√≥n requerido o inv√°lido
- **403**: Permisos insuficientes
- **404**: Recurso no encontrado
- **500**: Error interno del servidor

## Enlaces √ötiles

- [Documentaci√≥n Interactiva (Swagger UI)](http://localhost:3000/api/docs)
- [Especificaci√≥n OpenAPI (JSON)](http://localhost:3000/api/docs.json)
- [Repositorio del Proyecto](https://github.com/your-org/teamtime-backend)

## Contacto

- **Email**: ${specs.info?.contact?.email || 'desarrollo@teamtime.com'}
- **URL**: ${specs.info?.contact?.url || 'https://github.com/your-org/teamtime-backend'}

---

Generado autom√°ticamente el ${new Date().toLocaleString('es-ES', { timeZone: 'America/Mexico_City' })}
`;
}

// Ejecutar script si es llamado directamente
if (require.main === module) {
    generateDocs();
}

module.exports = { generateDocs };
